[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 movepub authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/movepub.html","id":"convert-a-movebank-dataset-to-darwin-core","dir":"Articles","previous_headings":"","what":"Convert a Movebank dataset to Darwin Core","title":"Introduction to movepub","text":"Movebank dataset can converted Darwin Core using write_dwc(). Let’s try small dataset. O_ASSEN bird GPS tracking study dataset, available Movebank deposited Zenodo. write_dwc() requires dataset structured Frictionless Data Package (recognizable presence datapackage.json file). case O_ASSEN Zenodo, meaning can read frictionless R package. Let’s create two directories: download dataset Zenodo local directory. Using local package avoids download data every time read. create package variable pointing local dataset: covers data. metadata derived DataCite using dataset DOI. O_ASSEN, DOI already stored package metadata: DataCite metadata include contact person rights holder, need set : now everything convert dataset Darwin Core EML: resulting eml.xml file includes metadata: resulting dwc_occurrence.csv contains Darwin Core data: files can uploaded GBIF IPT publication. dataset use DOI source dataset.","code":"dir_source <- \"o_assen/source\" # Local directory for the source dataset dir_dwc    <- \"o_assen/dwc\"    # Local directory for the Darin Core dataset frictionless::read_package(\"https://zenodo.org/record/5653311/files/datapackage.json\") %>%   # Not applicable here, but one can speed up downloading by removing large   # resources that won't be used, e.g. with:   # remove_resource(\"acceleration\") %>%   frictionless::write_package(dir_source) #> Please make sure you have the right to access data from this Data Package for your intended use. #> Follow applicable norms or requirements to credit the dataset and its authors. #> For more information, see https://doi.org/10.5281/zenodo.5653311 #> Downloading file from https://zenodo.org/record/5653311/files/O_ASSEN-reference-data.csv #> Downloading file from https://zenodo.org/record/5653311/files/O_ASSEN-gps-2018.csv.gz #> Downloading file from https://zenodo.org/record/5653311/files/O_ASSEN-gps-2019.csv.gz #> Downloading file from https://zenodo.org/record/5653311/files/O_ASSEN-acceleration-2018.csv.gz #> Downloading file from https://zenodo.org/record/5653311/files/O_ASSEN-acceleration-2019.csv.gz  package <- frictionless::read_package(file.path(dir_source, \"datapackage.json\")) #> Please make sure you have the right to access data from this Data Package for your intended use. #> Follow applicable norms or requirements to credit the dataset and its authors. #> For more information, see https://doi.org/10.5281/zenodo.5653311 package$id #> [1] \"https://doi.org/10.5281/zenodo.5653311\" contact <- person(   given = \"Peter\",   family = \"Desmet\",   email = \"peter.desmet@inbo.be\",   comment = c(ORCID = \"0000-0002-8442-8025\") ) rights_holder <- \"Vogelwerkgroep Assen\" movepub::write_dwc(   package = package,   doi = package$id,   directory = dir_dwc,   contact = contact,   rights_holder = rights_holder ) #> Creating EML metadata. #> Reading data from `package`. #> Creating database and transforming to Darwin Core. EML::read_eml(file.path(dir_dwc, \"eml.xml\")) #> dataset: #>   title: O_ASSEN - Eurasian oystercatchers (Haematopus ostralegus, Haematopodidae) #>     breeding in Assen (the Netherlands) [subsampled representation] #>   metadataProvider: #>     individualName: #>       givenName: Peter #>       surName: Desmet #>     electronicMailAddress: peter.desmet@inbo.be #>     userId: #>       directory: http://orcid.org/ #>       userId: 0000-0002-8442-8025 #>   pubDate: '2022-01-17' #>   abstract: #>     para: #>     - <![CDATA[<span><\/span>This animal tracking dataset is derived from Dijkstra #>       et al. (2022, <a href\"https://doi.org/10.5281/zenodo.5653311\">https://doi.org/10.5281/zenodo.5653311<\/a>) #>       a deposit of Movebank study <a href=\"https://www.movebank.org/cms/webapp?gwt_fragment=page=studies,path=study1605797471\">1605797471<\/a>. #>       Data have been standardized to Darwin Core using the <a href=\"https://inbo.github.io/movepub/\">movepub<\/a> #>       R package and are downsampled to the first GPS position per hour. The original #>       dataset description follows.]]> #>     - '<![CDATA[<em>O_ASSEN - Eurasian oystercatchers (Haematopus ostralegus, Haematopodidae) #>       breeding in Assen (the Netherlands)<\/em> is a bird tracking dataset published #>       by the Vogelwerkgroep Assen, Netherlands Institute of Ecology (NIOO-KNAW), Sovon, #>       Radboud University, the University of Amsterdam and the Research Institute for #>       Nature and Forest (INBO). It contains animal tracking data collected for the #>       study <strong>O_ASSEN<\/strong> using trackers developed by the University of #>       Amsterdam Bird Tracking System (UvA-BiTS, http://www.uva-bits.nl). The study #>       has been operational in 2018 and 2019. In total 6 individuals of Eurasian oystercatchers #>       (<em>Haematopus ostralegus<\/em>) have been tagged as a breeding bird in the #>       city of Assen (the Netherlands), mainly to study space use of oystercatchers #>       breeding in urban areas. Data are uploaded from the UvA-BiTS database to Movebank #>       and from there archived on Zenodo (see https://github.com/inbo/bird-tracking). #>       No new data are expected. Data in this package are exported from Movebank study #>       <em>O_ASSEN - Eurasian oystercatchers (Haematopus ostralegus, Haematopodidae) #>       breeding in Assen (the Netherlands)<\/em> (Movebank Study ID 1605797471), which #>       can be viewed at https://www.movebank.org/cms/webapp?gwt_fragment=page=studies,path=study1605797471. #>       Fields in the data follow the Movebank Attribute Dictionary (http://vocab.nerc.ac.uk/collection/MVB) #>       and are described in <code>datapackage.json<\/code>. <strong>Files<\/strong> Files #>       are structured as a Frictionless Data Package. You can access all data in R #>       via <code>https://zenodo.org/record/5653311/files/datapackage.json<\/code> using #>       frictionless. <strong>datapackage.json<\/strong>: technical description of the #>       data files. <strong>O_ASSEN-reference-data.csv<\/strong>: reference data about #>       the animals, tags and deployments. <strong>O_ASSEN-gps-yyyy.csv.gz<\/strong>: #>       GPS data recorded by the tags, grouped by year. <strong>O_ASSEN-acceleration-yyyy.csv.gz<\/strong>: #>       acceleration data recorded by the tags, grouped by year.]]>' #>     - These data were collected by Bert Dijkstra and Rinus Dillerop from Vogelwerkgroep #>       Assen, in collaboration with the Netherlands Institute of Ecology (NIOO-KNAW), #>       Sovon, Radboud University and the University of Amsterdam (UvA). Funding was #>       provided by the Prins Bernard Cultuurfonds Drenthe, municipality of Assen, IJsvogelfonds #>       (from Birdlife Netherlands and Nationale Postcodeloterij) and the Waterleiding #>       Maatschappij Drenthe. The dataset was published with funding from Stichting #>       NLBIF - Netherlands Biodiversity Information Facility. #>   keywordSet: #>     keywordThesaurus: n/a #>     keyword: #>     - animal movement #>     - animal tracking #>     - gps tracking #>     - accelerometer #>     - altitude #>     - temperature #>     - biologging #>     - birds #>     - UvA-BiTS #>     - Movebank #>     - frictionlessdata #>   intellectualRights: #>     rights: Creative Commons Zero v1.0 Universal #>     rightsIdentifier: cc0-1.0 #>     rightsIdentifierScheme: SPDX #>     rightsUri: https://creativecommons.org/publicdomain/zero/1.0/legalcode #>     schemeUri: https://spdx.org/licenses/ #>   distribution: #>     scope: document #>     online: #>       url: #>         function: information #>         url: https://www.movebank.org/cms/webapp?gwt_fragment=page=studies,path=study1605797471 #>   contact: #>     individualName: #>       givenName: Peter #>       surName: Desmet #>     electronicMailAddress: peter.desmet@inbo.be #>     userId: #>       directory: http://orcid.org/ #>       userId: 0000-0002-8442-8025 #>   alternateIdentifier: #>   - https://doi.org/10.5281/zenodo.5653311 #>   - https://www.movebank.org/cms/webapp?gwt_fragment=page=studies,path=study1605797471 #>   creator: #>   - individualName: #>       givenName: Bert #>       surName: Dijkstra #>   - individualName: #>       givenName: Rinus #>       surName: Dillerop #>   - individualName: #>       givenName: Kees #>       surName: Oosterbeek #>   - individualName: #>       givenName: Willem #>       surName: Bouten #>     userId: #>       directory: http://orcid.org/ #>       userId: 0000-0002-5250-8872 #>   - individualName: #>       givenName: Peter #>       surName: Desmet #>     userId: #>       directory: http://orcid.org/ #>       userId: 0000-0002-8442-8025 #>   - individualName: #>       givenName: Henk-Jan #>       surName: van der Kolk #>     userId: #>       directory: http://orcid.org/ #>       userId: 0000-0002-8023-379X #>   - individualName: #>       givenName: Bruno J. #>       surName: Ens #>     userId: #>       directory: http://orcid.org/ #>       userId: 0000-0002-4659-4807 #> packageId: c1bb11db-88ae-4786-9124-7256a95cc2d0 #> schemaLocation: https://eml.ecoinformatics.org/eml-2.2.0 https://eml.ecoinformatics.org/eml-2.2.0/eml.xsd #> system: uuid readr::read_csv(file.path(dir_dwc, \"dwc_occurrence.csv\"), show_col_types = FALSE) #> # A tibble: 5,829 × 29 #>    type  license           rightsHolder datasetID institutionCode collectionCode #>    <chr> <chr>             <chr>        <chr>     <chr>           <chr>          #>  1 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  2 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  3 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  4 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  5 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  6 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  7 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  8 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #>  9 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #> 10 Event https://creative… Vogelwerkgr… https://… MPIAB           Movebank       #> # … with 5,819 more rows, and 23 more variables: datasetName <chr>, #> #   basisOfRecord <chr>, informationWithheld <chr>, dataGeneralizations <chr>, #> #   occurrenceID <chr>, sex <chr>, lifeStage <chr>, #> #   reproductiveCondition <lgl>, occurrenceStatus <chr>, organismID <dbl>, #> #   organismName <lgl>, eventID <chr>, parentEventID <chr>, eventDate <dttm>, #> #   samplingProtocol <chr>, eventRemarks <chr>, #> #   minimumDistanceAboveSurfaceInMeters <dbl>, decimalLatitude <dbl>, …"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Desmet. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Desmet P (2022). movepub: Prepare Movebank data publication. R package version 0.0.0.9000, https://github.com/inbo/movepub.","code":"@Manual{,   title = {movepub: Prepare Movebank data for publication},   author = {Peter Desmet},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://github.com/inbo/movepub}, }"},{"path":"/index.html","id":"movepub","dir":"","previous_headings":"","what":"Prepare Movebank data for publication","title":"Prepare Movebank data for publication","text":"Movepub R package prepare Movebank animal tracking data publication research repository Global Biodiversity Information Facility (GBIF).","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Prepare Movebank data for publication","text":"can install development version movepub GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"inbo/movepub\")"},{"path":"/reference/add_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Movebank data to a Frictionless Data Package — add_resource","title":"Add Movebank data to a Frictionless Data Package — add_resource","text":"Adds Movebank data (reference-data, gps, acceleration, accessory-measurements) Data Resource Frictionless Data Package. function extends masks [frictionless::add_resource()].","code":""},{"path":"/reference/add_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Movebank data to a Frictionless Data Package — add_resource","text":"","code":"add_resource(package, resource_name, files, keys = TRUE)"},{"path":"/reference/add_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Movebank data to a Frictionless Data Package — add_resource","text":"package List describing Data Package, created read_package() create_package(). resource_name Name Data Resource. files One paths CSV file(s) contain data resource, character (vector). keys primaryKey foreignKey properties added Table Schema?","code":""},{"path":"/reference/add_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Movebank data to a Frictionless Data Package — add_resource","text":"Provided package one additional resource.","code":""},{"path":"/reference/datacite_to_eml.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DataCite metadata as EML — datacite_to_eml","title":"Get DataCite metadata as EML — datacite_to_eml","text":"Get metadata DataCite transform EML.","code":""},{"path":"/reference/datacite_to_eml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DataCite metadata as EML — datacite_to_eml","text":"","code":"datacite_to_eml(doi)"},{"path":"/reference/datacite_to_eml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DataCite metadata as EML — datacite_to_eml","text":"doi DOI dataset.","code":""},{"path":"/reference/datacite_to_eml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DataCite metadata as EML — datacite_to_eml","text":"EML list can extended /written file EML::write_eml().","code":""},{"path":"/reference/get_mvb_term.html","id":null,"dir":"Reference","previous_headings":"","what":"Get term from the Movebank Attribute Dictionary — get_mvb_term","title":"Get term from the Movebank Attribute Dictionary — get_mvb_term","text":"Search term label Movebank Attribute Dictionary (MVB). Returns order: term matching prefLabel, matching altLabel error matching term found.","code":""},{"path":"/reference/get_mvb_term.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get term from the Movebank Attribute Dictionary — get_mvb_term","text":"","code":"get_mvb_term(label)"},{"path":"/reference/get_mvb_term.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get term from the Movebank Attribute Dictionary — get_mvb_term","text":"label Label term look . Case ignored -, _, . : interpreted space.","code":""},{"path":"/reference/get_mvb_term.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get term from the Movebank Attribute Dictionary — get_mvb_term","text":"List term information.","code":""},{"path":"/reference/get_mvb_term.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get term from the Movebank Attribute Dictionary — get_mvb_term","text":"","code":"get_mvb_term(\"animal_id\") #> Error in open.connection(con, \"rb\"): Recv failure: Connection reset by peer  get_mvb_term(\"Deploy.On.Date\") #> Error in open.connection(con, \"rb\"): Recv failure: Connection reset by peer"},{"path":"/reference/write_camtrap_dwca.html","id":null,"dir":"Reference","previous_headings":"","what":"Write camera trap Darwin Core Archive — write_camtrap_dwca","title":"Write camera trap Darwin Core Archive — write_camtrap_dwca","text":"Converts Camtrap DP dataset Darwin Core formatted CSV files can uploaded IPT. Conversion based two SQL files: dwc_occurrence: Darwin Core Occurrence core file. dwc_multimedia: Audubon Media Description extension file.","code":""},{"path":"/reference/write_camtrap_dwca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write camera trap Darwin Core Archive — write_camtrap_dwca","text":"","code":"write_camtrap_dwca(package, directory)"},{"path":"/reference/write_camtrap_dwca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write camera trap Darwin Core Archive — write_camtrap_dwca","text":"package Camera Trap Data Package, read frictionless::read_package(). directory Path local directory write files .","code":""},{"path":"/reference/write_camtrap_dwca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write camera trap Darwin Core Archive — write_camtrap_dwca","text":"Darwin Core formatted CSV files written disk.","code":""},{"path":"/reference/write_dwc.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Movebank data to Darwin Core — write_dwc","title":"Transform Movebank data to Darwin Core — write_dwc","text":"Transforms published Movebank dataset (formatted Frictionless Data Package) Darwin Core CSV EML files can uploaded GBIF IPT publication. meta.xml file created.","code":""},{"path":"/reference/write_dwc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Movebank data to Darwin Core — write_dwc","text":"","code":"write_dwc(   package,   directory = \".\",   doi = package$id,   contact = NULL,   rights_holder = NULL )"},{"path":"/reference/write_dwc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Movebank data to Darwin Core — write_dwc","text":"package Frictionless Data Package Movebank data, read frictionless::read_package(). directory Path local directory write files . doi DOI original dataset, used get metadata. contact Person set resource contact metadata provider. provided person(). rights_holder Acronym organization owning managing rights data.","code":""},{"path":"/reference/write_dwc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Movebank data to Darwin Core — write_dwc","text":"CSV (data) EML (metadata) files written disk.","code":""},{"path":"/reference/write_dwc.html","id":"metadata","dir":"Reference","previous_headings":"","what":"Metadata","title":"Transform Movebank data to Darwin Core — write_dwc","text":"Metadata derived original dataset looking doi DataCite (example) transforming EML. Uses datacite_to_eml() hood. following properties set: title: Original title + [subsampled representation]. description: Automatically created first paragraph describing derived dataset, followed original dataset description. creators: Creators original dataset. contact: contact first creator original dataset. metadata provider: contact first creator original dataset. keywords: Keywords original dataset. alternative identifier: DOI original dataset. way, new DOI created publishing GBIF. external link (alternative identifier): URL Movebank study. set manually GBIF IPT: license (currently recognized IPT), type, subtype, update frequency, publishing organization. set: geographic, taxonomic, temporal coverage, associated parties, project data, sampling methods, citations. applicable: collection data.","code":""},{"path":"/reference/write_dwc.html","id":"data","dir":"Reference","previous_headings":"","what":"Data","title":"Transform Movebank data to Darwin Core — write_dwc","text":"reference-data gps resource expected found package. CSV data loaded SQLite database, transformed Darwin Core using SQL written disk CSV file(s). Key features Darwin Core transformation: Animal+tag deployments parent events, deployment start (human observation), GPS positions (machine observations), optional deployment end (human observation) child events. parent event contain information ID. deployment start event often metadata animal (sex, lifestage, comments) deployment whole. visible GPS records within deployment included (excluding outliers). GPS positions downsampled first GPS position per hour, reduce size high-frequency data. possible deployment contain GPS positions, e.g. tag malfunctioned right deployment. exact deployment end often unknown thus included.","code":""},{"path":"/reference/write_dwc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Movebank data to Darwin Core — write_dwc","text":"","code":"# See vignette(\"movepub\")"}]
